services:
    # Layanan Aplikasi Laravel (PHP-FPM)
    app:
        build:
            context: ./ # PENTING: Konteks build sekarang adalah folder utama proyek
            dockerfile: Dockerfile # Dockerfile sekarang ada di folder utama proyek
        container_name: laravel_app
        volumes:
            - ./:/var/www/html # Masukin semua folder proyek ke dalam container
        environment:
            # Ambil variabel DB dari file .env di folder utama proyek
            DB_CONNECTION: ${DB_CONNECTION}
            DB_HOST: mysql # PENTING: Ini HARUS 'mysql' kalo pake Docker Compose
            DB_PORT: ${DB_PORT}
            DB_DATABASE: ${DB_DATABASE} # Pake DB_DATABASE buat database pertama
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_SECOND_HOST: mysql # PENTING: Ini HARUS 'mysql' juga kalo pake Docker Compose
            DB_SECOND_PORT: ${DB_SECOND_PORT}
            DB_SECOND_DATABASE: ${DB_SECOND_DATABASE}
            DB_SECOND_USERNAME: ${DB_SECOND_USERNAME}
            DB_SECOND_PASSWORD: ${DB_SECOND_PASSWORD}
            # Pastiin variabel lingkungan lain yang dibutuhin Laravel juga ada, ya
            APP_ENV: ${APP_ENV}
            APP_KEY: ${APP_KEY}
            APP_DEBUG: ${APP_DEBUG}
            APP_URL: ${APP_URL}
        depends_on:
            - mysql # Pastiin MySQL udah nyala sebelum aplikasinya
        networks:
            - laravel_network

    # Layanan Nginx
    nginx:
        image: nginx:stable-alpine
        container_name: laravel_nginx
        ports:
            - "80:80" # Sambungin port 80 di komputer host ke port 80 di container
        volumes:
            - ./:/var/www/html # Masukin semua folder proyek
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf # Masukin konfigurasi Nginx dari folder nginx di root
        depends_on:
            - app # Pastiin aplikasi (PHP-FPM) udah siap nerima permintaan
        networks:
            - laravel_network

    # Layanan MySQL
    mysql:
        image: mysql:8.0
        container_name: laravel_mysql
        ports:
            - "3307:3306" # Opsional: Sambungin port 3306 di komputer host ke port 3306 di container (untuk akses langsung dari host)
            # Jika port 3306 di host sudah terpakai, kamu bisa ubah ke port lain, contoh:
            # - "3307:3306"
        environment:
            # Ambil variabel MySQL_ROOT_PASSWORD dari file .env di folder utama proyek
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE} # Database default yang bakal dibikin pas pertama kali (db_data)
            # MYSQL_USER dan MYSQL_PASSWORD tidak digunakan untuk user 'root'
            # MYSQL_USER: ${DB_USERNAME} # Baris ini dihapus
            # MYSQL_PASSWORD: ${DB_PASSWORD} # Baris ini dihapus
            # Buat database kedua (koha), kamu bisa bikin manual atau lewat migrasi Laravel
        volumes:
            - mysql_data:/var/lib/mysql # Volume buat data MySQL biar gak ilang
        networks:
            - laravel_network

volumes:
    mysql_data: # Ini definisi volume buat data MySQL

networks:
    laravel_network: # Ini definisi network biar semua service bisa ngobrol
        driver: bridge
